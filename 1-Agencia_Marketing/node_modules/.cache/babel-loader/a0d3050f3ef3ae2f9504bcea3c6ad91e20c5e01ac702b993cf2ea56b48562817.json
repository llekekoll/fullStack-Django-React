{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"style\"];\nimport React from 'react';\nexport default function OnlyWhen(props) {\n  var {\n    children,\n    when,\n    hiddenMode,\n    className\n  } = props;\n  var singleChild = React.Children.only(children);\n  var _singleChild$props = singleChild.props,\n    {\n      style\n    } = _singleChild$props,\n    restOfChildProps = _objectWithoutPropertiesLoose(_singleChild$props, _excluded);\n  var extendedProps = _extends({}, restOfChildProps);\n  var keepNode = hiddenMode && hiddenMode !== 'null';\n  if (keepNode) {\n    if (hiddenMode === 'css') {\n      extendedProps.className = ((extendedProps.className || '') + \" \" + (className || '')).trim();\n    } else {\n      extendedProps.style = _extends({}, style, hiddenMode === 'display' && {\n        display: 'none'\n      }, hiddenMode === 'visibility' && {\n        visibility: 'hidden'\n      });\n    }\n  }\n  var cloned = /*#__PURE__*/React.cloneElement(singleChild, extendedProps);\n  var toHide = keepNode ? cloned : null;\n  return when ? singleChild : toHide;\n}","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAmBA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;EACrD,IAAM;IAAEC,QAAF;IAAYC,IAAZ;IAAkBC,UAAlB;IAA8BC;EAA9B,IAA4CJ,KAAlD;EACA,IAAMK,WAAW,GAAGP,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CAApB;EACA,yBAAuCI,WAAW,CAACL,KAAnD;IAAM;MAAEQ;IAAF,CAAN;IAAkBC,gBAAlB;EACA,IAAMC,aAAa,gBAAQD,gBAAR,CAAnB;EAEA,IAAME,QAAQ,GAAGR,UAAU,IAAIA,UAAU,KAAK,MAA9C;EACA,IAAIQ,QAAJ,EAAc;IACZ,IAAIR,UAAU,KAAK,KAAnB,EAA0B;MACxBO,aAAa,CAACN,SAAd,GAA0B,EAAGM,aAAa,CAACN,SAAd,IAA2B,EAA9B,WAAoCA,SAAS,IAAI,EAAjD,GAAsDQ,IAAtD,EAA1B;IACD,CAFD,MAEO;MACLF,aAAa,CAACF,KAAd,gBACKA,KADL,EAEML,UAAU,KAAK,SAAf,IAA4B;QAAEU,OAAO,EAAE;MAAX,CAFlC,EAGMV,UAAU,KAAK,YAAf,IAA+B;QAAEW,UAAU,EAAE;MAAd,CAHrC;IAKD;EACF;EACD,IAAMC,MAAM,gBAAGjB,KAAK,CAACkB,YAAN,CAAmBX,WAAnB,EAAgCK,aAAhC,CAAf;EACA,IAAMO,MAAM,GAAGN,QAAQ,GAAGI,MAAH,GAAY,IAAnC;EAEA,OAAOb,IAAI,GAAGG,WAAH,GAAiBY,MAA5B;AACD","names":["React","OnlyWhen","props","children","when","hiddenMode","className","singleChild","Children","only","style","restOfChildProps","extendedProps","keepNode","trim","display","visibility","cloned","cloneElement","toHide"],"sources":["C:\\Users\\Cristian\\OneDrive\\Documentos\\GitHub\\fullStack-Django-React\\1-Agencia_Marketing\\node_modules\\@uiw\\react-only-when\\src\\index.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface OnlyWhenProps {\n  /** A single child element */\n  children: React.ReactElement;\n  /** When true, children will rendered as is */\n  when: boolean;\n  /** This is working in combination with hiddenMode={\"css\"} */\n  className?: string;\n  /**\n   * Determines how \"react-only-when\" should hide the child element\n   * \"null\": Will not render the child\n   * \"display\": Will render the child with display:none\n   * \"visibility\": Will render the child with visibility:hidden\n   * \"css\": Will render the child with a CSS class (you can pass it a custom className prop)\n   */\n  hiddenMode?: 'null' | 'display' | 'visibility' | 'css';\n}\n\nexport default function OnlyWhen(props: OnlyWhenProps) {\n  const { children, when, hiddenMode, className } = props;\n  const singleChild = React.Children.only(children);\n  const { style, ...restOfChildProps } = singleChild.props;\n  const extendedProps = { ...restOfChildProps };\n\n  const keepNode = hiddenMode && hiddenMode !== 'null';\n  if (keepNode) {\n    if (hiddenMode === 'css') {\n      extendedProps.className = `${extendedProps.className || ''} ${className || ''}`.trim();\n    } else {\n      extendedProps.style = {\n        ...style,\n        ...(hiddenMode === 'display' && { display: 'none' }),\n        ...(hiddenMode === 'visibility' && { visibility: 'hidden' }),\n      };\n    }\n  }\n  const cloned = React.cloneElement(singleChild, extendedProps);\n  const toHide = keepNode ? cloned : null;\n\n  return when ? singleChild : toHide;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}